# https://github.com/rubycocos/blockchain/blob/feb41ee377332f88dd7dce141f86f06d18f98da1/abicoder/test/test_spec.rb
# 1:1
RSpec.describe AbiCoderRb do
  let(:decoder) { AbiCoderRb::Decoder.new }
  def hex(data)
    AbiCoderRb.hex_to_bin(data)
  end

  def bin(data)
    AbiCoderRb.bin_to_hex(data)
  end

  it "baz" do
    types = %w[uint32 bool]
    args  = [69, true]

    data = hex "0000000000000000000000000000000000000000000000000000000000000045" \
               "0000000000000000000000000000000000000000000000000000000000000001"

    expect(decoder.decode(types, data)).to eq args
  end

  it "bar" do
    types = ["bytes3[2]"]
    args =  [
      ["abc".b, "def".b]
    ]

    data = hex "6162630000000000000000000000000000000000000000000000000000000000" \
               "6465660000000000000000000000000000000000000000000000000000000000"
    expect(decoder.decode(types, data)).to eq args
  end

  it "sam" do
    types = ["bytes", "bool", "uint256[]"]
    args = [
      "dave".b,
      true,
      [1, 2, 3]
    ]

    data = hex "0000000000000000000000000000000000000000000000000000000000000060" + # 1 (location#1)
               "0000000000000000000000000000000000000000000000000000000000000001" + # 2 (bool)
               "00000000000000000000000000000000000000000000000000000000000000a0" + # 3 (location#3)
               "0000000000000000000000000000000000000000000000000000000000000004" + # 4 (bytes length)
               "6461766500000000000000000000000000000000000000000000000000000000" + # 5 (bytes)
               "0000000000000000000000000000000000000000000000000000000000000003" \
               "0000000000000000000000000000000000000000000000000000000000000001" \
               "0000000000000000000000000000000000000000000000000000000000000002" \
               "0000000000000000000000000000000000000000000000000000000000000003"
    expect(decoder.decode(types, data)).to eq args
  end

  it "f" do
    types = ["uint256", "uint32[]", "bytes10", "bytes"]
    args = [
      0x123,
      [0x456, 0x789],
      "1234567890".b,
      "Hello, world!".b
    ]

    data = hex "0000000000000000000000000000000000000000000000000000000000000123" \
               "0000000000000000000000000000000000000000000000000000000000000080" \
               "3132333435363738393000000000000000000000000000000000000000000000" \
               "00000000000000000000000000000000000000000000000000000000000000e0" \
               "0000000000000000000000000000000000000000000000000000000000000002" \
               "0000000000000000000000000000000000000000000000000000000000000456" \
               "0000000000000000000000000000000000000000000000000000000000000789" \
               "000000000000000000000000000000000000000000000000000000000000000d" \
               "48656c6c6f2c20776f726c642100000000000000000000000000000000000000"
    expect(decoder.decode(types, data)).to eq args
  end

  it "g" do
    types = ["uint256[][]", "string[]"]
    args =  [
      [[1, 2], [3]],
      %w[one two three]
    ]

    data = hex "0000000000000000000000000000000000000000000000000000000000000040" \
               "0000000000000000000000000000000000000000000000000000000000000140" \
               "0000000000000000000000000000000000000000000000000000000000000002" \
               "0000000000000000000000000000000000000000000000000000000000000040" \
               "00000000000000000000000000000000000000000000000000000000000000a0" \
               "0000000000000000000000000000000000000000000000000000000000000002" \
               "0000000000000000000000000000000000000000000000000000000000000001" \
               "0000000000000000000000000000000000000000000000000000000000000002" \
               "0000000000000000000000000000000000000000000000000000000000000001" \
               "0000000000000000000000000000000000000000000000000000000000000003" \
               "0000000000000000000000000000000000000000000000000000000000000003" \
               "0000000000000000000000000000000000000000000000000000000000000060" \
               "00000000000000000000000000000000000000000000000000000000000000a0" \
               "00000000000000000000000000000000000000000000000000000000000000e0" \
               "0000000000000000000000000000000000000000000000000000000000000003" \
               "6f6e650000000000000000000000000000000000000000000000000000000000" \
               "0000000000000000000000000000000000000000000000000000000000000003" \
               "74776f0000000000000000000000000000000000000000000000000000000000" \
               "0000000000000000000000000000000000000000000000000000000000000005" \
               "7468726565000000000000000000000000000000000000000000000000000000"
    expect(decoder.decode(types, data)).to eq args
  end

  it "single integer" do
    types = ["uint256"]
    args = [98_127_491]
    data = hex "0000000000000000000000000000000000000000000000000000000005d94e83"

    expect(decoder.decode(types, data)).to eq args
  end

  it "integer and address" do
    types = %w[uint256 address]
    args = [
      324_124,
      "cd2a3d9f938e13cd947ec05abc7fe734df8dd826"
    ]
    data = hex "000000000000000000000000000000000000000000000000000000000004f21c" \
               "000000000000000000000000cd2a3d9f938e13cd947ec05abc7fe734df8dd826"
    expect(decoder.decode(types, data)).to eq args
  end

  it "githubwiki" do
    types = [
      "uint256",
      "uint32[]",
      "bytes10",
      "bytes"
    ]
    args = [
      291,
      [1110, 1929],
      "1234567890".b,
      "Hello, world!".b
    ]
    data = hex "0000000000000000000000000000000000000000000000000000000000000123" \
               "0000000000000000000000000000000000000000000000000000000000000080" \
               "3132333435363738393000000000000000000000000000000000000000000000" \
               "00000000000000000000000000000000000000000000000000000000000000e0" \
               "0000000000000000000000000000000000000000000000000000000000000002" \
               "0000000000000000000000000000000000000000000000000000000000000456" \
               "0000000000000000000000000000000000000000000000000000000000000789" \
               "000000000000000000000000000000000000000000000000000000000000000d" \
               "48656c6c6f2c20776f726c642100000000000000000000000000000000000000"
    expect(decoder.decode(types, data)).to eq args
  end

  it "hello" do
    types = %w[uint256 string]
    args = [1234, "Hello World"]
    data = hex "00000000000000000000000000000000000000000000000000000000000004d2" \
               "0000000000000000000000000000000000000000000000000000000000000040" \
               "000000000000000000000000000000000000000000000000000000000000000b" \
               "48656c6c6f20576f726c64000000000000000000000000000000000000000000"
    expect(decoder.decode(types, data)).to eq args

    types = ["uint256[]", "string"]
    args = [[1234, 5678], "Hello World"]
    data = hex "0000000000000000000000000000000000000000000000000000000000000040" +
               "00000000000000000000000000000000000000000000000000000000000000a0" +
               "0000000000000000000000000000000000000000000000000000000000000002" +
               "00000000000000000000000000000000000000000000000000000000000004d2" +
               "000000000000000000000000000000000000000000000000000000000000162e" +
               "000000000000000000000000000000000000000000000000000000000000000b" +
               "48656c6c6f20576f726c64000000000000000000000000000000000000000000"
    expect(decoder.decode(types, data)).to eq args
  end

  it "tuples" do
    ## sample from ether.js abicoder docu
    types = ["uint256", "(uint256,string)"]
    args = [1234, [5678, "Hello World"]]
    data = hex "00000000000000000000000000000000000000000000000000000000000004d2" +
               "0000000000000000000000000000000000000000000000000000000000000040" +
               "000000000000000000000000000000000000000000000000000000000000162e" +
               "0000000000000000000000000000000000000000000000000000000000000040" +
               "000000000000000000000000000000000000000000000000000000000000000b" +
               "48656c6c6f20576f726c64000000000000000000000000000000000000000000"
    expect(decoder.decode(types, data)).to eq args

    ## reported encoding bug from eth.rb
    ##   see https://github.com/q9f/eth.rb/issues/102#
    types = ["uint256", "(address,uint256)[]", "string"]
    args = [
      66,
      [["18a475d6741215709ed6cc5f4d064732379b5a58", 1]],
      "QmWBiSE9ByR6vrx4hvrjqS3SG5r6wE4SRq7CP2RVpafZWV"
    ]
    data = hex "0000000000000000000000000000000000000000000000000000000000000042" +
               "0000000000000000000000000000000000000000000000000000000000000060" +
               "00000000000000000000000000000000000000000000000000000000000000c0" +
               "0000000000000000000000000000000000000000000000000000000000000001" +
               "00000000000000000000000018a475d6741215709ed6cc5f4d064732379b5a58" +
               "0000000000000000000000000000000000000000000000000000000000000001" +
               "000000000000000000000000000000000000000000000000000000000000002e" +
               "516d57426953453942795236767278346876726a715333534735723677453453" +
               "52713743503252567061665a5756000000000000000000000000000000000000"
    expect(decoder.decode(types, data)).to eq args
  end
end
